{
    "manifests": {
        "frosh/code-quality-meta": {
            "manifest": {
                "copy-from-recipe": {
                    "vendor-bin/": "vendor-bin/",
                    "root/": ""
                },
                "gitignore": [
                    "phpstan.neon",
                    "/vendor-bin/**/vendor/"
                ],
                "post-install-output": [
                    "  * <fg=blue>Setup</> execute:",
                    "    <comment>composer require --dev bamarni/composer-bin-plugin && jq '.extra += {\"bamarni-bin\": {\"bin-links\": false, \"forward-command\": true}}' composer.json > composer.tmp && mv composer.tmp composer.json && composer install</comment>",
                    "",
                    "  * <fg=blue>Recommended</>",
                    "    The following code snippet shows examples of how to use code quality tools to check and improve the quality of your code.",
                    "    You can customize the plugin paths based on your project's needs.",
                    "    <comment>{",
                    "        \"scripts\": {",
                    "            \"csfixer\": \"@php vendor-bin/cs-fixer/vendor/bin/php-cs-fixer --allow-risky=yes fix --dry-run --diff\",",
                    "            \"csfixer-fix\": \"@php vendor-bin/cs-fixer/vendor/bin/php-cs-fixer --allow-risky=yes fix --diff\",",
                    "            \"phpstan\": [",
                    "              \"@php vendor/shopware/core/DevOps/StaticAnalyze/phpstan-bootstrap.php\",",
                    "              \"@php vendor-bin/phpstan/vendor/bin/phpstan analyze custom/static-plugins custom/plugins\"",
                    "            ],",
                    "            \"rector-dry\": \"@php vendor-bin/rector/vendor/bin/rector process --config=rector.php --dry-run\",",
                    "            \"rector\": \"@php vendor-bin/rector/vendor/bin/rector process --config=rector.php\",",
                    "            \"commit\": [",
                    "                \"@csfixer-fix\",",
                    "                \"@phpstan\",",
                    "                \"@rector\",",
                    "                \"@php bin/console dal:validate\"",
                    "            ]",
                    "        }",
                    "    }</comment>"
                ]
            },
            "files": {
                "root/.php-cs-fixer.dist.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "use PhpCsFixer\\Config;",
                        "use PhpCsFixer\\Finder;",
                        "use PhpCsFixer\\Runner\\Parallel\\ParallelConfigFactory;",
                        "",
                        "return (new Config())",
                        "    ->setParallelConfig(ParallelConfigFactory::detect())",
                        "    ->setRiskyAllowed(true)",
                        "    ->setRules([",
                        "        '@Symfony' => true,",
                        "        '@Symfony:risky' => true,",
                        "",
                        "        'blank_line_after_opening_tag' => false,",
                        "        'class_attributes_separation' => ['elements' => ['property' => 'one', 'method' => 'one']],",
                        "        'concat_space' => ['spacing' => 'one'],",
                        "        'declare_strict_types' => true,",
                        "        'fopen_flags' => false,",
                        "        'general_phpdoc_annotation_remove' => ['annotations' => ['copyright', 'category']],",
                        "        'linebreak_after_opening_tag' => false,",
                        "        'method_argument_space' => ['on_multiline' => 'ensure_fully_multiline'],",
                        "        'native_function_invocation' => [",
                        "            'scope' => 'namespaced',",
                        "            'strict' => false,",
                        "            'exclude' => ['ini_get'],",
                        "        ],",
                        "        'no_superfluous_phpdoc_tags' => ['allow_unused_params' => true, 'allow_mixed' => true],",
                        "        'no_useless_else' => true,",
                        "        'no_useless_return' => true,",
                        "        'ordered_class_elements' => true,",
                        "        'phpdoc_align' => ['align' => 'left'],",
                        "        'phpdoc_annotation_without_dot' => false,",
                        "        'phpdoc_line_span' => true,",
                        "        'phpdoc_order' => ['order' => ['param', 'throws', 'return']],",
                        "        'phpdoc_summary' => false,",
                        "        'phpdoc_to_comment' => false,",
                        "        'php_unit_dedicate_assert' => ['target' => 'newest'],",
                        "        'php_unit_dedicate_assert_internal_type' => true,",
                        "        'php_unit_mock' => true,",
                        "        'php_unit_test_case_static_method_calls' => ['call_type' => 'static'],",
                        "        'self_accessor' => false,",
                        "        'single_line_throw' => false,",
                        "        'single_quote' => ['strings_containing_single_quote_chars' => true],",
                        "        'strict_comparison' => true,",
                        "        'strict_param' => true,",
                        "        'trailing_comma_in_multiline' => ['after_heredoc' => true, 'elements' => ['array_destructuring', 'arrays', 'match']],",
                        "        'void_return' => true,",
                        "        'yoda_style' => [",
                        "            'equal' => false,",
                        "            'identical' => false,",
                        "            'less_and_greater' => false,",
                        "        ],",
                        "    ])",
                        "    ->setUsingCache(true)",
                        "    ->setCacheFile('var/cache/cs_fixer')",
                        "    ->setFinder(",
                        "        (new Finder())",
                        "            ->in([__DIR__.'/custom/static-plugins/*/src',])",
                        "            ->in([__DIR__.'/custom/plugins/*/src',])",
                        "            ->exclude(['node_modules', '*/vendor/*'])",
                        "    );",
                        ""
                    ],
                    "executable": false
                },
                "root/phpstan.neon.dist": {
                    "contents": [
                        "parameters:",
                        "    level: 8",
                        "    tmpDir: var/cache/phpstan_dev",
                        "    inferPrivatePropertyTypeFromConstructor: true",
                        "    ignoreErrors:",
                        "        -",
                        "            identifier: missingType.iterableValue",
                        "",
                        "    symfony:",
                        "        constantHassers: false",
                        "        containerXmlPath: 'var/cache/phpstan_dev/Shopware_Core_DevOps_StaticAnalyze_StaticAnalyzeKernelPhpstan_devDebugContainer.xml'",
                        "",
                        "    bootstrapFiles:",
                        "        - vendor/shopware/core/DevOps/StaticAnalyze/phpstan-bootstrap.php",
                        "",
                        "    excludePaths:",
                        "        - **/vendor/*",
                        "rules:",
                        "    # rules from https://github.com/symplify/phpstan-rules",
                        "    - Symplify\\PHPStanRules\\Rules\\Spotter\\IfElseToMatchSpotterRule",
                        "    - Symplify\\PHPStanRules\\Rules\\Missing\\CheckSprintfMatchingTypesRule",
                        "",
                        "    # domain",
                        "    - Symplify\\PHPStanRules\\Rules\\CheckAttributteArgumentClassExistsRule",
                        "    - Symplify\\PHPStanRules\\Rules\\Enum\\RequireUniqueEnumConstantRule",
                        "    - Symplify\\PHPStanRules\\Rules\\ForbiddenParamTypeRemovalRule",
                        "    - Symplify\\PHPStanRules\\Rules\\PreventParentMethodVisibilityOverrideRule",
                        "",
                        "    # paths",
                        "    - Symplify\\PHPStanRules\\Rules\\NoMissingDirPathRule",
                        "    - Symplify\\PHPStanRules\\Rules\\NoArrayAccessOnObjectRule",
                        "",
                        "    # dead-code",
                        "    - Symplify\\PHPStanRules\\Rules\\NoIssetOnObjectRule",
                        "",
                        "    # explicit naming",
                        "    - Symplify\\PHPStanRules\\Rules\\NoParentMethodCallOnNoOverrideProcessRule",
                        "    - Symplify\\PHPStanRules\\Rules\\RequireThisOnParentMethodCallRule",
                        "    - Symplify\\PHPStanRules\\Rules\\RequireThisCallOnLocalMethodRule",
                        "    - Symplify\\PHPStanRules\\Rules\\ForbiddenMultipleClassLikeInOneFileRule",
                        "",
                        "    - Symplify\\PHPStanRules\\Rules\\Complexity\\ForbiddenArrayMethodCallRule",
                        "    - Symplify\\PHPStanRules\\Symfony\\Rules\\PreventDoubleSetParameterRule",
                        ""
                    ],
                    "executable": false
                },
                "root/rector.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "use Frosh\\Rector\\Set\\ShopwareSetList;",
                        "use Rector\\CodeQuality\\Rector\\Class_\\InlineConstructorDefaultToPropertyRector;",
                        "use Rector\\Config\\RectorConfig;",
                        "use Rector\\Php74\\Rector\\LNumber\\AddLiteralSeparatorToNumberRector;",
                        "use Rector\\Set\\ValueObject\\LevelSetList;",
                        "use Rector\\Set\\ValueObject\\SetList;",
                        "use Rector\\Symfony\\Set\\SymfonySetList;",
                        "use Rector\\Symfony\\Twig134\\Rector\\Return_\\SimpleFunctionAndFilterRector;",
                        "",
                        "return RectorConfig::configure()",
                        "    ->withSymfonyContainerXml(__DIR__ . '/var/cache/phpstan_dev/Shopware_Core_DevOps_StaticAnalyze_StaticAnalyzeKernelPhpstan_devDebugContainer.xml')",
                        "    ->withBootstrapFiles([",
                        "        __DIR__ . '/vendor/autoload.php',",
                        "    ])",
                        "    ->withPaths([",
                        "        __DIR__ . '/custom/static-plugins/*/src',",
                        "        __DIR__ . '/custom/plugins/*/src',",
                        "    ])",
                        "    ->withSkip([",
                        "        AddLiteralSeparatorToNumberRector::class => [",
                        "            __DIR__ . '/custom/plugins/*/src/Migration',",
                        "            __DIR__ . '/custom/static-plugins/*/src/Migration'",
                        "        ]",
                        "    ])",
                        "    ->withRules([",
                        "        InlineConstructorDefaultToPropertyRector::class,",
                        "        SimpleFunctionAndFilterRector::class,",
                        "    ])",
                        "    ->withSets([",
                        "        SetList::CODE_QUALITY,",
                        "        SetList::DEAD_CODE,",
                        "        SymfonySetList::SYMFONY_54,",
                        "        SymfonySetList::SYMFONY_60,",
                        "        SymfonySetList::SYMFONY_61,",
                        "        SymfonySetList::SYMFONY_62,",
                        "        SymfonySetList::SYMFONY_63,",
                        "        SymfonySetList::SYMFONY_64,",
                        "        SymfonySetList::SYMFONY_71,",
                        "        SymfonySetList::SYMFONY_CODE_QUALITY,",
                        "        SymfonySetList::ANNOTATIONS_TO_ATTRIBUTES,",
                        "        LevelSetList::UP_TO_PHP_81,",
                        "        LevelSetList::UP_TO_PHP_82,",
                        "        ShopwareSetList::SHOPWARE_6_5_0,",
                        "        ShopwareSetList::SHOPWARE_6_6_0,",
                        "    ]);",
                        ""
                    ],
                    "executable": false
                },
                "vendor-bin/cs-fixer/composer.json": {
                    "contents": [
                        "{",
                        "    \"require-dev\": {",
                        "        \"friendsofphp/php-cs-fixer\": \"3.64.0\"",
                        "    }",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "vendor-bin/phpstan/composer.json": {
                    "contents": [
                        "{",
                        "    \"require-dev\": {",
                        "        \"phpstan/phpstan\": \"^1.12\",",
                        "        \"phpstan/extension-installer\": \"^1.4\",",
                        "        \"phpstan/phpstan-phpunit\": \"^1.4\",",
                        "        \"phpstan/phpstan-symfony\": \"^1.4\",",
                        "        \"symplify/phpstan-rules\": \"^13.0\"",
                        "    },",
                        "    \"config\": {",
                        "        \"allow-plugins\": {",
                        "            \"phpstan/extension-installer\": true",
                        "        }",
                        "    }",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "vendor-bin/rector/composer.json": {
                    "contents": [
                        "{",
                        "    \"require-dev\": {",
                        "        \"rector/rector\": \"^1.2\",",
                        "        \"frosh/shopware-rector\": \"^0.4.\"",
                        "    }",
                        "}",
                        ""
                    ],
                    "executable": false
                }
            },
            "ref": "5e29ae761f0c69e85185cc6e79e15c1bb3a0956b"
        }
    }
}
